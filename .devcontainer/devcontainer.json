// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.134.1/containers/docker-existing-dockerfile
{
	"name": "centerpoint",
	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",
	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"python.pythonPath": "/bin/python3",
        "C_Cpp.intelliSenseEngine": "Default"
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-python.python",
        "ms-vscode.cpptools",
		"ms-vscode.cmake-tools"
	],
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "bash /dev_ws/.devcontainer/postCreateCommand.sh",
	// Workspace mount
	"workspaceMount": "source=${localWorkspaceFolder},target=/dev_ws/src/lidar_centerpoint,type=bind,consistency=delegated",
	// Define workspace
	"workspaceFolder": "/dev_ws",
	"runArgs": [
		"-e", "DISPLAY=${env:DISPLAY}",
        "-v", "/tmp/.X11-unix:/tmp/.X11-unix",
        "-v", "/etc/localtime:/etc/localtime:ro",
        "-v", "/dev/input:/dev/input",
		"-v", "/home/${env:USER}/Documents/datasets:/datasets",
		"-v", "/media/${env:USER}/Volume1:/media/Volume",
		"-v", "/home/${env:USER}/av20/av_software/tum_models:/tum_models",
		"--network=host",
		"--cap-add=SYS_PTRACE",
		"--security-opt=seccomp:unconfined",
		"--security-opt=apparmor:unconfined",
		"--privileged",
		"--gpus","all",
		"-e", "QT_X11_NO_MITSHM=1",
		"--runtime=nvidia",
		"-e", "NVIDIA_DRIVER_CAPABILITIES=all"
		],
	"containerEnv": {
		"LIBGL_ALWAYS_SOFTWARE": "1"
	}
}

